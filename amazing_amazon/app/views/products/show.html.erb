<div class='shadow-sm p-3 mb-5 bg-white rounded overflow-wrap'>
  <div class='clearfix'>
    <h1 class='float-left'>
      <span class='badge badge-pill badge-info'>
        <%= @product.id %>
      </span>
      <%= @product.title %>
    </h1>
    <h1 class='float-right text-center'>
        <span class='badge badge-pill badge-success'><%= number_to_currency @product.price %></span>
    </h1>
    
  </div>
  <small class='text-muted'>
    sold by <em><%= @product.user.full_name %></em>
  <small>
  <hr/>
  <p class='shadow-none p-3 rounded'><%= @product.description %></p>
  <p>Tags:</p>
  <% unless @product.tags.empty? %>
    <div>
      <% @product.tags.each do |tag| %>
        <%= link_to(
              tag.name,
              tag, class: "badge badge-pill badge-primary",
            ) %>
      <% end %>
    </div>
  <% end %>
  <div>
    <%= link_to(
          "Delete",
          product_path(@product),
          method: :delete,
          class: "btn btn-danger",
          data: { confirm: "are you sure?" },
        ) %>
    <%= link_to "Edit", edit_product_path(@product), class: "btn btn-info" %>
  </div>
</div> 
<p class='text-muted'>Leave a Review :D</p>
<div class='shadow-sm p-3 mb-5 bg-white rounded'>
  <%= form_with model: [@product, @review], local: true do |f| %>
    <div class='form-group'>
      <%= f.label :rating %>
      <%= f.select(:rating, options_for_select(1..5), class: "form-control") %>
    </div>
    <div class='form-group'>
      <%= f.label :body %>
      <%= f.text_area(:body, class: "form-control", placeholder: "Your thoughts here") %>
    </div>
    <%= f.submit class: "btn btn-primary" %>
  <% end %>
</div>

<h2> Here's what people are saying: </h2>

<% @product.reviews.each do |review| %>
  <div class='shadow-sm p-3 mb-1 bg-white rounded'>   
  <% # display_stars is a custom helper method to display stars located in /app/helpers/reviews_helper.rb %>
  <% # all methods defined in any helper file are available in all views :D. We can place complex logic in these helpers to avoid bloating our model. (business logic inside of controller should be kept to a minimum) %>
    <h4>
      <%= display_stars(review) %>
      <p class='font-weight-lighter d-inline-block'>by <%= review.user.full_name %></p>
               <%= button_to("Delete", product_review_path(@product.id, review.id), method: :delete, class: "btn btn-danger float-right",
                                                                                    data: { confirm: "Are you sure?" }) %>

    </h4>
    <p class='review-body text-muted'><%= review.body %></p>
    
  <% vote = review.votes.find_by(user: current_user) %>
      <span class="vote-widget">
        <% if vote.nil? %>
          <%= button_to "vote up", product_review_votes_path(review_id: review.id, product_id: review.product.id, is_up: true), method: :post %>
          <%= review.vote_total %> votes
          <%= button_to "vote down", product_review_votes_path(review_id: review.id, product_id: review.product.id, is_up: false), method: :post %>
        <% elsif vote.is_up? %>
          <%= button_to "vote up", vote_path(vote), method: :delete, class: "active" %>
          <%= review.vote_total %>
          <%= button_to "vote down", vote_path(vote, is_up: false), method: :patch %>
        <% else %>
          <%= button_to "vote up", vote_path(vote, is_up: true), method: :patch %>
          <%= review.vote_total %>
          <%= button_to "vote down", vote_path(vote), method: :delete %>
        <% end %>
      </span>

    <p>
      <% if user_signed_in? && can?(:like, review) %>
          <% like = current_user.likes.find_by_review_id(review) %>
          <% if like %>
            <%= link_to "Unlike", like_path(like), method: :delete %>
          <% else %>
            <%= link_to "Like", review_likes_path(review), method: :post %>
          <% end %>
      <% end %>
     <%= review.likes.count %> likes
    </p>
  </div>
<% end %>
